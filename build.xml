<?xml version="1.0"?>
<project name="MyProject" default="build">
    <!--вариант 52998/2247-->
    <fail message="Ant 1.10.8+ is required!">
        <condition>
            <not>
                <antversion atleast="1.10.8"/>
            </not>
        </condition>
    </fail>

    <property file="build.properties"/>

    <path id="classpath">
        <pathelement path="build/test"/>
        <pathelement path="build/main"/>
        <fileset dir="lib" includes="*.jar" />
        <fileset dir="${resources.folder}" includes="*.properties"/>
    </path>

    <path id="classpath.test">
        <pathelement location="lib/junit-4.13.2.jar"/>
        <pathelement location="lib/hamcrest-2.2.jar"/>
        <pathelement location="build/main"/>
    </path>

    <target name="clean">
        <echo>Очистка директории...</echo>
        <delete dir="${build.main}"/>
        <delete dir="${build.test}"/>
        <delete dir="${build.report}"/>
    </target>

    <target name="init">
        <echo>Создание директорий...</echo>
        <mkdir dir="${build.main}"/>
        <mkdir dir="${build.test}"/>
        <mkdir dir="${build.jar}"/>
    </target>

    <target name="compile" depends="init">
        <echo>Компиляция...</echo>
        <javac srcdir="${src.main}" destdir="${build.main}" classpathref="classpath" includeantruntime="false"/>
        <unjar dest="${build.main}">
            <fileset dir="${lib}">
                <include name="**/*.jar"/>
            </fileset>
        </unjar>
        <copy todir="${build.main}">
            <fileset dir="${resources.folder}" includes="*.properties"/>
        </copy>
        <javac srcdir="${src.test}" destdir="${build.test}" classpathref="classpath" includeantruntime="false"/>
    </target>

    <target name="build" depends="compile, test">
        <echo>Сборка...</echo>

        <jar destfile="${build.artifact}" basedir="${build.main}">
            <manifest>
                <attribute name="Main-Class" value="${src.mainClass}"/>
                <attribute name="Release-Version" value="${app.version}"/>
            </manifest>
        </jar>
    </target>

    <target name="test" depends="compile">
        <echo>Тестирование...</echo>
        <junit printsummary="on" haltonfailure="yes" fork="true">
            <classpath>
                <path refid="classpath.test"/>
                <pathelement location="${build.test}"/>
            </classpath>
            <formatter type="brief" usefile="false" />
            <batchtest todir="${build.report}" fork="yes">
                <fileset dir="${src.test}" includes="**/*Test.java" />
            </batchtest>
        </junit>
        <echo>Тесты завершены...</echo>
    </target>

    <target name="native2ascii">
        <native2ascii src="${resources.folder}" dest="${resources.folder}/tmp" includes="*.properties" ext=".properties"/>
        <copy todir="${resources.folder}">
            <fileset dir="${resources.folder}/tmp">
                <include name="**"/>
            </fileset>
        </copy>
        <delete dir="${resources.folder}/tmp"/>
    </target>

    <target name="team">
        <exec executable="cmd.exe">
            <arg value="/c"/>
            <arg value="svn update ${svn.repo} -r${svn.currentCommit} "/>
        </exec>

        <exec executable="cmd.exe">
            <arg value="/c"/>
            <arg value="svn update ${svn.repo} -rPREV "/>
        </exec>

        <antcall target="build">
            <param name="build.artifact" value="${svn.buildDir}/HEAD-1.jar"/>
        </antcall>

        <exec executable="cmd">
            <arg value="/c"/>
            <arg value="svn update ${svn.repo} -rPREV "/>
        </exec>

        <antcall target="build">
            <param name="build.artifact" value="${svn.buildDir}/HEAD-2.jar"/>
        </antcall>

        <exec executable="cmd">
            <arg value="/c"/>
            <arg value="svn update ${svn.repo} -rPREV "/>
        </exec>

        <antcall target="build">
            <param name="build.artifact" value="${svn.buildDir}/HEAD-3.jar"/>
        </antcall>

        <exec executable="cmd">
            <arg value="/c"/>
            <arg value="svn update ${svn.repo} -rPREV "/>
        </exec>

        <antcall target="build">
            <param name="build.artifact" value="${svn.buildDir}/HEAD-4.jar"/>
        </antcall>

        <exec executable="cmd.exe">
            <arg value="/c"/>
            <arg value="svn update ${svn.repo} -r${svn.currentCommit} "/>
        </exec>

        <zip destfile="${svn.buildDir}/team.zip" basedir="${svn.buildDir}" includes="**"/>
    </target>

<!--    <target name="default">-->
<!--        <antcall target="doSomethingElse">-->
<!--            <param name="param1" value="value"/>-->
<!--        </antcall>-->
<!--    </target>-->

<!--    <target name="doSomethingElse">-->
<!--        <echo message="param1=${param1}"/>-->
<!--    </target>-->


</project>